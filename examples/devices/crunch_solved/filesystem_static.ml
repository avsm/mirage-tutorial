(* This file has been autogenerated by mir-crunch *)
module Internal = struct
let file_chunks = function
 | "bar" | "/bar" -> Some ["67890\n" ]
 | "foo" | "/foo" -> Some ["12345\n" ]
 | _ -> None

let file_list = ["foo"; "bar";  ]
let size = function
 |"foo" |"/foo" -> Some 6L
 |"bar" |"/bar" -> Some 6L
 |_ -> None

end

let name="myblock"

open Lwt

exception Error of string

let iter_s fn = Lwt_list.iter_s fn Internal.file_list

let size name = return (Internal.size name)

let read name =
  match Internal.file_chunks name with
  |None -> return None
  |Some c ->
     let chunks = ref c in
     return (Some (Lwt_stream.from (fun () ->
       match !chunks with
       |hd :: tl -> 
         chunks := tl;
         return (Some (Bitstring.bitstring_of_string hd))
       |[] -> return None
     )))

let create vbd : OS.Devices.kv_ro Lwt.t =  
  return (object
    method iter_s fn = iter_s fn
    method read name = read name
    method size name = size name
  end)

let _ =
  let plug = Lwt_mvar.create_empty () in
  let unplug = Lwt_mvar.create_empty () in
  let provider = object(self)
    method id = name
    method plug = plug
    method unplug = unplug
    method create ~deps ~cfg id =
      Lwt.bind (create id) (fun kv ->
        let entry = OS.Devices.({
           provider=self;
           id=self#id;
           depends=[];
           node=KV_RO kv }) in
        return entry
      )
  end in
  OS.Devices.new_provider provider;
  OS.Main.at_enter (fun () -> Lwt_mvar.put plug {OS.Devices.p_id=name; p_dep_ids=[]; p_cfg=[]})

